[tool:pytest]
# Pytest configuration for Document Parser Unit Tests

# Test discovery
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test directories
testpaths = .

# Minimum version
minversion = 6.0

# Add options
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --showlocals
    --durations=10
    --cov=src/document_parser
    --cov-report=term-missing
    --cov-report=html:reports/coverage_html
    --cov-report=xml:reports/coverage.xml
    --cov-fail-under=80
    --junitxml=reports/junit.xml
    --html=reports/test_report.html
    --self-contained-html

# Markers
markers =
    unit: Unit tests
    integration: Integration tests
    performance: Performance tests
    slow: Slow running tests
    mock: Tests using mocks
    classifier: Document classifier tests
    ocr: OCR service tests
    extractor: Field extractor tests
    validator: Document validator tests
    preprocessor: Image preprocessor tests
    api: API tests
    memory: Memory usage tests
    network: Network dependent tests
    external: Tests requiring external services

# Filtering
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*unclosed.*:ResourceWarning

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage settings
[coverage:run]
source = src/document_parser
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */env/*
    */migrations/*
    */settings/*
    */manage.py
    */wsgi.py
    */asgi.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

show_missing = true
skip_covered = false
skip_empty = false
precision = 2

[coverage:html]
directory = reports/coverage_html
title = Document Parser Coverage Report

[coverage:xml]
output = reports/coverage.xml