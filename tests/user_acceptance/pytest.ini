[tool:pytest]
# User Acceptance Testing - Pytest Configuration
# Configuration for running user acceptance tests for the Malaysian document parser

# Test discovery
python_files = test_*.py *_test.py
python_classes = Test* *Tests
python_functions = test_*
testpaths = tests/user_acceptance

# Test execution options
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --disable-warnings
    --color=yes
    --durations=10
    --maxfail=5
    --timeout=300
    --timeout-method=thread
    --cov=src
    --cov-report=html:uat_coverage_html
    --cov-report=xml:uat_coverage.xml
    --cov-report=term-missing
    --cov-fail-under=70
    --junitxml=uat_junit.xml
    --html=uat_report.html
    --self-contained-html
    --capture=no
    --log-cli=true
    --log-cli-level=INFO
    --log-cli-format="%(asctime)s [%(levelname)8s] %(name)s: %(message)s"
    --log-cli-date-format="%Y-%m-%d %H:%M:%S"
    --log-file=uat_tests.log
    --log-file-level=DEBUG
    --log-file-format="%(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d %(funcName)s(): %(message)s"
    --log-file-date-format="%Y-%m-%d %H:%M:%S"

# Test markers
markers =
    # Test categories
    real_documents: Tests using real document samples
    feedback: User feedback collection tests
    accuracy: Accuracy validation tests
    edge_cases: Edge case scenario tests
    performance: Performance and load tests
    integration: Integration with external services
    
    # Document types
    mykad: MyKad document tests
    spk: SPK certificate tests
    
    # Test severity
    critical: Critical functionality tests
    important: Important functionality tests
    standard: Standard functionality tests
    
    # Test execution
    slow: Tests that take longer than 30 seconds
    fast: Tests that complete quickly (< 5 seconds)
    manual: Tests requiring manual intervention
    automated: Fully automated tests
    
    # Quality levels
    high_quality: Tests with high quality documents
    medium_quality: Tests with medium quality documents
    low_quality: Tests with low quality documents
    damaged: Tests with damaged documents
    
    # Environment specific
    local: Tests for local environment
    staging: Tests for staging environment
    production: Tests for production environment
    
    # External dependencies
    requires_api: Tests requiring API access
    requires_database: Tests requiring database access
    requires_files: Tests requiring test files
    requires_network: Tests requiring network access
    
    # Test types
    smoke: Smoke tests for basic functionality
    regression: Regression tests
    acceptance: User acceptance criteria tests
    usability: Usability tests
    
    # Performance categories
    load: Load testing
    stress: Stress testing
    volume: Volume testing
    endurance: Endurance testing
    
    # Validation types
    field_validation: Field-level validation tests
    document_validation: Document-level validation tests
    business_rules: Business rule validation tests
    
    # User scenarios
    new_user: Tests for new users
    experienced_user: Tests for experienced users
    admin_user: Tests for admin users

# Test filtering
# Run only critical tests: pytest -m critical
# Run only MyKad tests: pytest -m mykad
# Run fast tests only: pytest -m "fast and not slow"
# Skip manual tests: pytest -m "not manual"
# Run real document tests: pytest -m real_documents

# Minimum version requirements
minversion = 6.0

# Test timeout settings
timeout = 300  # 5 minutes default timeout
timeout_method = thread

# Coverage settings
[coverage:run]
source = src/
omit = 
    */tests/*
    */venv/*
    */env/*
    */__pycache__/*
    */migrations/*
    */settings/*
    */manage.py
    */wsgi.py
    */asgi.py
    setup.py
    conftest.py

[coverage:report]
# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    
    # Don't complain about missing debug-only code:
    def __repr__
    if self\.debug
    
    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError
    
    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:
    
    # Don't complain about abstract methods
    @(abc\.)?abstractmethod
    
    # Don't complain about type checking imports
    if TYPE_CHECKING:
    
    # Don't complain about platform specific code
    if sys.platform
    
ignore_errors = True
show_missing = True
skip_covered = False
skip_empty = True
sort = Cover
precision = 2

[coverage:html]
directory = uat_coverage_html
title = UAT Coverage Report

[coverage:xml]
output = uat_coverage.xml

# Pytest-html settings
[pytest-html]
self_contained = true
report_title = User Acceptance Test Report
generate_report_on_test = true

# Pytest-xdist settings (for parallel execution)
[pytest-xdist]
addopts = --dist=loadfile --tx=popen//python

# Test data and fixtures
[pytest-fixtures]
fixture_dirs = 
    tests/user_acceptance/fixtures
    tests/fixtures
    fixtures

# Custom pytest options
[pytest-custom]
# UAT specific settings
uat_test_data_dir = test_data/real_documents
uat_output_dir = uat_results
uat_api_base_url = http://localhost:8000
uat_timeout_seconds = 30
uat_parallel_workers = 4
uat_accuracy_threshold = 0.85
uat_confidence_threshold = 0.7
uat_max_processing_time = 10.0
uat_max_memory_usage = 512.0

# Document type settings
mykad_accuracy_threshold = 0.90
spk_accuracy_threshold = 0.88

# Performance thresholds
performance_max_response_time = 5.0
performance_min_throughput = 60
performance_max_memory = 256.0
performance_max_cpu = 80.0

# Edge case settings
edge_case_success_threshold = 0.6
edge_case_scenarios = poor_quality,damaged_document,orientation,format_variations

# Feedback settings
feedback_collection_enabled = true
feedback_web_port = 5001
feedback_session_duration = 24
feedback_satisfaction_threshold = 3.5

# Validation settings
validation_require_manual = true
validation_min_validators = 2
validation_agreement_threshold = 0.8

# Reporting settings
reporting_generate_html = true
reporting_generate_pdf = false
reporting_include_charts = true
reporting_include_detailed_metrics = true

# Environment settings
test_environment = uat
api_retry_attempts = 3
api_retry_delay = 1.0
database_timeout = 30
file_upload_max_size = 50

# Logging settings
log_level = INFO
log_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_date_format = %Y-%m-%d %H:%M:%S
log_file_max_size = 100
log_backup_count = 5

# Security settings
ssl_verification = false
api_key = 
auth_token = 

# Cleanup settings
cleanup_temp_files = true
backup_results = true
result_retention_days = 90

# Notification settings
notifications_enabled = false
email_notifications = false
slack_notifications = false

# Quality gates
quality_gate_accuracy = 0.85
quality_gate_performance = 5.0
quality_gate_memory = 512.0
quality_gate_coverage = 70.0
quality_gate_success_rate = 0.95

# Test execution limits
max_test_duration = 3600  # 1 hour
max_parallel_tests = 10
max_retry_attempts = 3
max_memory_per_test = 1024  # MB
max_file_size = 100  # MB

# Document processing limits
max_documents_per_batch = 100
max_processing_queue_size = 500
max_concurrent_processing = 10
processing_timeout = 300

# Image processing settings
image_max_resolution = 4096x4096
image_min_resolution = 300x300
image_quality_threshold = 0.7
image_formats = jpg,jpeg,png,pdf

# Text extraction settings
text_confidence_threshold = 0.7
text_clarity_threshold = 0.8
text_completeness_threshold = 0.95

# Field validation settings
field_accuracy_critical = 0.98
field_accuracy_important = 0.95
field_accuracy_standard = 0.90

# Error handling settings
max_false_positive_rate = 0.05
max_false_negative_rate = 0.03
error_retry_enabled = true
error_notification_enabled = true

# Cache settings
cache_enabled = true
cache_ttl = 3600
cache_max_size = 1000

# Monitoring settings
monitoring_enabled = true
metrics_collection_enabled = true
health_check_enabled = true
health_check_interval = 60

# Development settings
debug_mode = false
verbose_logging = true
detailed_errors = true
stack_trace_enabled = true

# Production settings
production_mode = false
strict_validation = true
security_checks = true
audit_logging = true